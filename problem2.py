'''

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

'''

#solving using recusrion
def fibrecursion(n):
    if (n<=1):
        return n;
    else:
        return (fibrecursion(n-1)+fibrecursion(n-2))
fib=[]
for i in range(35):
    t=fibrecursion(i)
    if t%2==0:
        fib.append(t)
print(fib)
sum=0;
for j in fib:
    sum+=j
print(sum)


#method 2

fibNumbers=[0,1]
while fibNumbers[-1]<4000000:
    fibNumbers.append(fibNumbers[-1]+fibNumbers[-2])
print(fibNumbers)

evenfibNumbers=[]
for fibs in fibNumbers:
    if fibs%2==0:
        evenfibNumbers.append(fibs)
print(evenfibNumbers)
totalSum=0
for j in evenfibNumbers:
    totalSum+=j
print(totalSum)